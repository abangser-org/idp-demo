---
apiVersion: v1
kind: Namespace
metadata:
  name: port-k8s-exporter
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: port-k8s-exporter
  namespace: flux-system
spec:
  interval: 3s
  url: https://port-labs.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: port-k8s-exporter
  namespace: flux-system
spec:
  interval: 3s
  releaseName: port-k8s-exporter
  chart:
    spec:
      chart: port-k8s-exporter
      sourceRef:
        kind: HelmRepository
        name: port-k8s-exporter
      version: "0.1.17"
      interval: 3s
  values:
    installCRDs: true
    secret:
      secrets:
        portClientId: CLIENT_ID
        portClientSecret: CLIENT_SECRET
    configMap:
      name: config-k8s.yaml
      config:
        resources:
          - kind: v1/namespaces
            selector:
              query: .metadata.name | contains("kube-system")
            port:
              entity:
                mappings:
                  - identifier: '"dot"'
                    title: '"dot"'
                    blueprint: '"cluster"'
                    properties:
                      provider: '"n/a"'
          - kind: v1/secrets
            selector:
              query: .type == "connection.crossplane.io/v1alpha1"
            port:
              entity:
                mappings:
                  - identifier: .metadata.name
                    title: .metadata.name
                    blueprint: '"cluster"'
                    properties:
                      kube-config: .data.kubeconfig
          - kind: v1/namespaces
            selector:
              query: .metadata.annotations.environment == "true"
            port:
              entity:
                mappings:
                  - identifier: .metadata.name + "-" + "dot"
                    title: .metadata.name
                    blueprint: '"environment"'
                    relations:
                      cluster: '"dot"'
          - kind: v1/namespaces
            selector:
              query: .metadata.name | startswith("kube") | not
            port:
              entity:
                mappings:
                  - identifier: .metadata.name + "-" + "dot"
                    title: .metadata.name
                    blueprint: '"namespace"'
                    properties:
                      creationTimestamp: .metadata.creationTimestamp
                      labels: .metadata.labels
                    relations:
                      Cluster: '"dot"'
          - kind: devopstoolkitseries.com/v1alpha1/appclaims
            selector:
              query: .spec.compositionSelector.matchLabels.type == "backend-db-aws"
            port:
              entity:
                mappings:
                  - identifier: .metadata.name + "-appclaim-" + .metadata.namespace + "-" + "dot"
                    title: .metadata.name
                    icon: '"Deployment"'
                    blueprint: '"backend-app"'
                    properties:
                      url: '"https://github.com/" + .metadata.annotations.gitHubOrg + "/" + .metadata.annotations.gitHubRepo'
                      language: '"Go"'
                      host: .spec.parameters.host
                      db-version: .spec.parameters.db.version
                      db-size: .spec.parameters.db.size
                      labels: .metadata.labels
                    relations:
                      environment: .metadata.namespace + "-" + "dot"
          - kind: v1/nodes
            port:
              entity:
                mappings:
                  - identifier: (.metadata.name) | (split(".")|join("_")) + "-" + "dot"
                    title: .metadata.name + "-" + "dot"
                    icon: '"Node"'
                    blueprint: '"node"'
                    properties:
                      creationTimestamp: .metadata.creationTimestamp
                      totalCPU: .status.allocatable.cpu
                      totalMemory: .status.allocatable.memory
                      labels: .metadata.labels
                      kubeletVersion: .status.nodeInfo.kubeletVersion | split("-") | .[0]
                      ready: .status.conditions[] | select(.type == "Ready") | .status
                    relations:
                      Cluster: '"dot"'
          - kind: v1/pods
            selector:
              query: .metadata.namespace | startswith("kube") | not
            port:
              entity:
                mappings:
                  - identifier: .metadata.name + "-" + .metadata.namespace + "-" + "dot"
                    title: .metadata.name
                    icon: '"Microservices"'
                    blueprint: '"pod"'
                    properties:
                      startTime: .status.startTime
                      phase: .status.phase
                      labels: .metadata.labels
                      containers: (.spec.containers | map({image, resources})) + .status.containerStatuses | group_by(.image) | map(add)
                      conditions: .status.conditions
                    relations:
                      Node: (.spec.nodeName) | (split(".")|join("_")) + "-" + "dot"
  valuesFrom:
    - kind: Secret
      name: port-secrets
      valuesKey: portClientId
      targetPath: secret.secrets.portClientId
    - kind: Secret
      name: port-secrets
      valuesKey: portClientSecret
      targetPath: secret.secrets.portClientSecret
  targetNamespace: port-k8s-exporter
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
